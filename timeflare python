def convert_firework_sequence(input_value):
    MONTH_NAMES = [
        "January", "February", "March",
        "April", "May", "June",
        "July", "August", "September",
        "October", "November", "December"
    ]
    
    try:
        # Check if it's a fraction like "2/4"
        if isinstance(input_value, str) and '/' in input_value:
            numerator, denominator = map(int, input_value.strip().split('/'))

            if denominator == 4:
                month = (numerator - 1) * 3 + 1
            elif denominator == 3:
                month = (numerator - 1) * 4 + 1
            elif denominator == 2:
                month = (numerator - 1) * 6 + 1
            elif denominator == 12:
                month = numerator
            elif denominator == 1:
                month = 1
            else:
                return "‚ùå Unsupported fraction. Try 1/4, 2/3, etc."
        
        elif isinstance(input_value, int) and 1 <= input_value <= 12:
            month = input_value
        
        else:
            return "‚ùå Invalid input. Enter a month number (1‚Äì12) or fraction like '1/4'."

        # Get real-world month name
        month_name = MONTH_NAMES[month - 1]

        # Timeline breakdown
        conversions = {
            "Month Number": month,
            "Month Name": month_name,
            "1/4 System": f"{(month - 1) // 3 + 1}/4",
            "1/3 System": f"{(month - 1) // 4 + 1}/3",
            "1/2 System": f"{1 if month <= 6 else 2}/2",
            "1/12 System": f"{month}/12",
            "1/1 System": "1/1",
            "12/12 System": "12/12" if month == 12 else "(not end)"
        }

        return conversions

    except Exception as e:
        return f"‚ö†Ô∏è Error: {str(e)}"


def system_info():
    info = """
üîç Firework Year Systems Explanation:

üü¶ 1/4 System ‚Üí The year is split into 4 quarters (Jan‚ÄìMar, Apr‚ÄìJun, Jul‚ÄìSep, Oct‚ÄìDec).
üüß 1/3 System ‚Üí The year is split into 3 thirds (Jan‚ÄìApr, May‚ÄìAug, Sep‚ÄìDec).
üü® 1/2 System ‚Üí The year is split into 2 halves (Jan‚ÄìJun, Jul‚ÄìDec).
üü© 1/12 System ‚Üí Each month is 1/12 of the year.
‚¨õ 1/1 System ‚Üí Represents the entire year as one unit.
‚¨ú 12/12 System ‚Üí Represents the end of a full year cycle ‚Äî December (12th month).

Each system offers a unique lens to view the calendar, whether logically, seasonally, or symbolically.
"""
    return info


# üîÅ Interactive mode
if __name__ == "__main__":
    print("üî• Welcome to the Firework Year Sequence Converter üî•")
    print("Enter a month number (1‚Äì12) or a fraction (e.g. '2/4', '1/3', '12/12'):")

    user_input = input("üß† Your Input: ").strip()

    # Try converting input to integer first
    try:
        user_input = int(user_input)
    except ValueError:
        pass  # keep as string

    result = convert_firework_sequence(user_input)

    print("\nüìÖ Firework Timeline Breakdown:")
    if isinstance(result, dict):
        for key, val in result.items():
            print(f"  üîπ {key}: {val}")
    else:
        print(result)

    print(system_info())
